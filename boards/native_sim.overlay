#include <zephyr/dt-bindings/mipi_dbi/mipi_dbi.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/{
	aliases 
	{
		// display-ctrl = &st7789;
		display-ctrl = &sdl_dc;
	};

	leds //backlight control is unused, but kept to reduce ifdef noise
	{
		compatible = "gpio-leds";
		display_bl: display_bl_node 
		{
			gpios = <&gpio0 20 GPIO_ACTIVE_HIGH>;
		};
	};

	gpio_keys
	{
		compatible = "gpio-keys";
		key_right:  key_right  { gpios = <&gpio0 0 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_RIGHT>;     };
		key_left:   key_left   { gpios = <&gpio0 1 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_LEFT>;      };
		key_down:   key_down   { gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_DOWN>;      };
		key_up:     key_up     { gpios = <&gpio0 3 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_UP>;        };
		key_fire:   key_fire   { gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_LEFTCTRL>;  };
		key_enter:  key_enter  { gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_SPACE>;     };
		key_strafe: key_strafe { gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_LEFTALT>;   };
		key_run:    key_run    { gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_LEFTSHIFT>; };
		key_menu:   key_menu   { gpios = <&gpio0 8 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_ESC>;       };
		key_wtog:   key_wtog   { gpios = <&gpio0 9 GPIO_ACTIVE_HIGH>; zephyr,code = <INPUT_KEY_TAB>;       };
	};

	//dummy ram
	sram0: memory@3ffb0000 {
		compatible = "mmio-sram";
		reg = < 0x3ffb0000 0x3e800 >;
	};
};

&gpio0 
{
	ngpios = <10>;
	sdl_gpio
	{
		compatible = "zephyr,gpio-emul-sdl";
		// sdl2 lib internal scan codes
		scancodes = 
		<
			/* must match gpio_keys order */
			79  /* SDL_SCANCODE_RIGHT */
			80  /* SDL_SCANCODE_LEFT */
			81  /* SDL_SCANCODE_DOWN */
			82  /* SDL_SCANCODE_UP */
			224 /* SDL_SCANCODE_LCTRL */
			44  /* SDL_SCANCODE_SPACE */
			226 /* SDL_SCANCODE_LALT */
			225 /* SDL_SCANCODE_LSHIFT */
			41  /* SDL_SCANCODE_ESCAPE */
			43  /* SDL_SCANCODE_TAB */
		>;
	};
};

/delete-node/ &slot0_partition;
/delete-node/ &slot1_partition;
/delete-node/ &storage_partition;
/delete-node/ &scratch_partition;
&flash0
{
	// reg = <0x0 DT_SIZE_M(16)>; //address, size(16MB)
	reg = <0x10000000 DT_SIZE_M(64)>; //address, size(16MB)
	partitions
	{
		slot0_partition: partition@0
		{
			label = "image-0";
			reg = < 0x0 DT_SIZE_K(512) >;
			read-only;
		};
		game_settings_partition: partition@81000
		{
			label = "game-settings-partition";
			reg = < 0x81000 0x1000 >;
		};
		game_saves_partition: partition@82000
		{
			label = "game-saves-partition";
			reg = < 0x82000 0x1000 >;
		};
		cache_partition: partition@83000
		{
			label = "cache-partition";
			reg = < 0x83000 (0x22b000 - 0x83000) >;
		};
		wad_partition: partition@22b000
		{
			label = "wad-partition";
			reg = < 0x22b000 (DT_SIZE_M(16) - 0x22b000) >;
			read-only;
		};
	};
};

&sdl_dc
{
	// status = "disabled";
	height = < 135 >;
	width = < 240 >;
};
