#ifndef INC_USER_FLASH_H
#define INC_USER_FLASH_H

#include <zephyr/kernel.h>
#include <zephyr/devicetree.h>
#include <zephyr/storage/flash_map.h>

#define USER_RAM_NODE 			DT_NODELABEL(sram0)
#define USER_RAM_BASE_ADDRESS 	DT_REG_ADDR(USER_RAM_NODE)

#define USER_FLASH_NODE 		DT_NODELABEL(flash0)
#define USER_FLASH_BASE_ADDRESS DT_REG_ADDR(USER_FLASH_NODE)
#define USER_FLASH_SIZE 		DT_REG_SIZE(USER_FLASH_NODE)
#define USER_FLASH_WRITE_SIZE 	DT_PROP(USER_FLASH_NODE, write_block_size)
#define USER_FLASH_ERASE_SIZE 	DT_PROP(USER_FLASH_NODE, erase_block_size)

#define USER_WAD_PARTITION_NODE 		DT_NODE_BY_FIXED_PARTITION_LABEL(wad_partition)
#define USER_WAD_PARTITION_ID 			DT_FIXED_PARTITION_ID(USER_WAD_PARTITION_NODE)
#define USER_WAD_PARTITION_BASE_ADDRESS (DT_REG_ADDR(USER_WAD_PARTITION_NODE) + USER_FLASH_BASE_ADDRESS)
#define USER_WAD_PARTITION_SIZE 		FIXED_PARTITION_NODE_SIZE(USER_WAD_PARTITION_NODE)
#define USER_WAD_PARTITION_SIZE_KB 		(USER_WAD_PARTITION_SIZE / 1024)

#define USER_CODE_PARTITION_NODE 		 DT_NODELABEL(code_partition)
#define USER_CODE_PARTITION_BASE_ADDRESS (DT_REG_ADDR(USER_CODE_PARTITION_NODE) + USER_FLASH_BASE_ADDRESS)
#define USER_CODE_PARTITION_SIZE 		 DT_REG_SIZE(USER_CODE_PARTITION_NODE)
#define USER_CODE_PARTITION_SIZE_KB 	 (USER_CODE_PARTITION_SIZE / 1024)

// const uint32_t flasha = USER_FLASH_BASE_ADDRESS; //0x10000000
// const uint32_t wada = USER_WAD_PARTITION_BASE_ADDRESS;//0x10081000

int user_flash_init(void);
int user_flash_read(void *buff, size_t len, uint32_t addr);

#endif